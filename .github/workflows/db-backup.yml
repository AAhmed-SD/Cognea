name: Daily Postgres Backup

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install pg_dump
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
      - name: Check database connection
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
        run: |
          if [ -z "$PGHOST" ] || [ -z "$PGUSER" ] || [ -z "$PGPASSWORD" ] || [ -z "$PGDATABASE" ]; then
            echo "‚ùå Database secrets not configured. Skipping backup."
            exit 0
          fi
          
          # Test connection
          pg_isready -h "$PGHOST" -U "$PGUSER" -d "$PGDATABASE" || {
            echo "‚ùå Cannot connect to database. Skipping backup."
            exit 0
          }
          
      - name: Dump Postgres DB
        env:
          PGHOST: ${{ secrets.PGHOST }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
        run: |
          if [ -z "$PGHOST" ] || [ -z "$PGUSER" ] || [ -z "$PGPASSWORD" ] || [ -z "$PGDATABASE" ]; then
            echo "‚ùå Database secrets not configured. Skipping backup."
            exit 0
          fi
          
          BACKUP_FILE="backup_$(date +%F_%H%M%S).sql"
          echo "üì¶ Creating backup: $BACKUP_FILE"
          
          pg_dump -h "$PGHOST" -U "$PGUSER" -d "$PGDATABASE" --verbose > "$BACKUP_FILE" || {
            echo "‚ùå Backup failed"
            exit 1
          }
          
          echo "‚úÖ Backup created successfully: $BACKUP_FILE"
          ls -la "$BACKUP_FILE"
          
      - name: Upload backup artifact
        uses: actions/upload-artifact@v4
        with:
          name: db-backup-$(date +%F)
          path: backup_*.sql
          retention-days: 30
          
      - name: Cleanup local files
        run: rm -f backup_*.sql 